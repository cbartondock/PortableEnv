if [ -f "$HOME/.profile" ]; then
  source ~/.profile
fi

# Correct non bashlike wildcard behavior
set nonomatch

# brew
if [ -d "/opt/homebrew/bin/" ]
then
  export PATH=$PATH:/opt/homebrew/bin
fi

# oh-my-zsh
if [ -d "~/.oh-my-zsh" ]
then
  export ZSH="$HOME/.oh-my-zsh"
  plugins=(
    git #ga (git add) gb (git branch) etc
    osx #spotify man-preview show/hidefiles ofd/cdf (open/cd Finder d)
    #ssh-agent #runs ssh agent automatically
  )
  excludeconfigs=(
    theme-and-appearance
  )
  source $ZSH/oh-my-zsh.sh
fi

# Windows Linux Subsystem
if grep -qEi "(Microsoft|WSL)" /proc/version &> /dev/null ; then
  if [ "$SSH_CONNECTION" ]; then
    export DISPLAY=PICARD:10.0
  else
    # I really want to be able to tell whether vcxsrv is in fullscreen (:0) or not (:1)
    export DISPLAY=192.168.0.215:1.0
  fi
  sudo ifconfig eth0 mtu 1350 #fix wsl over vpn
  export XDG_RUNTIME_DIR=$HOME/.xdgdir
  export RUNLEVEL=3
  sudo /etc/init.d/dbus start >/dev/null
  # currently in order for the xdesktop to work one needs to exit out of the vcxsrv that is providing clipboard sync.
  alias xdesktop='export DISPLAY=192.168.0.215:0.0; /mnt/c/Program\ Files/VcXsrv/vcxsrv.exe :0 -ac &; sleep 0.5; dbus-launch --exit-with-session ~/.xsession &> /dev/null;'
  alias displayzero='export DISPLAY=192.168.0.215:0.0'
  export BROWSER=/mnt/c/Program\ Files\ \(x86\)/Google/Chrome/Application/chrome.exe
elif [ "$SSH_CONNECTION" ]; then
  export DISPLAY=:10
else
  export DISPLAY=:0
fi

# Powerline Go
function powerline_precmd() {
  PS1="$($GOPATH/bin/powerline-go -error $? -shell zsh -colorize-hostname -hostname-only-if-ssh -cwd-max-depth 2 -cwd-max-dir-size 13 -modules "host,cwd,git,root,jobs")"
}

function install_powerline_precmd() {
  for s in "${precmd_functions[@]}"; do
    if [ "$s" = "powerline_precmd" ]; then
      return
    fi
  done
  precmd_functions+=(powerline_precmd)
}

if [ "$TERM" != "linux" ]; then
  install_powerline_precmd
fi

# Compiler/Interpreter Aliases
alias gcc8='gcc-8'
alias cc8='gcc-8'
alias g8++='g++-8'
alias c8++='g++-8'
alias py='python'
alias py3='python3'

# Auth aliases
alias authgit='ssh-add ~/.ssh/id_rsa'

# SSH aliases
alias sshconf='sudo -E vim /etc/ssh/sshd_config'
alias sshstart='sudo service ssh start'
alias sshstop='sudo service ssh stop'
alias sshidentities='ssh-add -l'
alias sshagent='eval $(ssh-agent)'
function authkey() {
  touch ~/.ssh/authorized_keys
  echo "# $2" >> ~/.ssh/authorized_keys
  cat $1 >> ~/.ssh/authorized_keys
  echo "" >> ~/.ssh/authorized_keys
}

function authkeyremote() {
  echo "Adding Public Key $1 to the authorized_keys for $2:$3"
  local pubkey="$1"
  local myhost="$2"
  local port="$3"
  ssh-copy-id -f -i $pubkey -p $port $myhost
}

# Vim aliases
alias xvim='vim -X' # Disable X11 Connection
alias svim='sudo -E vim'

# Respect the Local Vim
if [ -d "/usr/local/bin/vim" ]
then
  alias vim='/usr/local/bin/vim'
  alias xvim='/usr/local/bin/vim -X'
  alias svim='sudo -E /usr/local/bin/vim'
fi

# Other aliases
alias cd..='cd ..'
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias sizes='sudo du -sh *'

# Go
if [ -d "/usr/local/go" ]
then
  export GOPATH="/usr/local/gopath"
  export PATH="$PATH:/usr/local/go/bin:$GOPATH/bin"
fi

if [ -d "$HOME/go/" ]
then
  export GOPATH="$HOME/go"
  export PATH="$PATH:$GOPATH/bin"
fi

# Android
if [ -d "$HOME/Library/Android" ]
then
  export ANDROID_HOME="$HOME/Library/Android/sdk/"
  export PATH="$PATH:$ANDROID_HOME/emulator"
  export PATH="$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools"
  alias emu="$HOME/Library/Android/sdk/emulator/emulator"
  alias emudroid="emu @$(echo \"$(emu -list-avds)\" | awk '{print $1;}')"
fi

# Pyenv
if [ -d "$HOME/.pyenv" ]
then
  export PATH="$HOME/.pyenv/bin:$PATH"
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"
fi

# CalibreWeb
if [ -d "$HOME/.local/bin" ]
then
  export PATH="$HOME/.local/bin:$PATH"
fi

# If a manjaro zsh config exists, use it
if [ -d "/etc/skel" ]
then
  # Use the skel zshrc instead of the customized version below to get the default manjaro zsh
  # source /etc/skel/.zshrc
  # Use powerline
  USE_POWERLINE="true"
  # Source manjaro-zsh-configuration
  if [[ -e /usr/share/zsh/manjaro-zsh-config ]]; then
    source /usr/share/zsh/manjaro-zsh-config
  fi
  # Use manjaro zsh prompt
  if [[ -e /usr/share/zsh/manjaro-zsh-prompt ]]; then
    source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
  fi
fi

# Source the local specific config
if [ -f "$HOME/.zshlocal" ]
then
  source "$HOME/.zshlocal"
fi

# Improved ls
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
if [ -z $LS_NATURAL ]
then
  export LS_NATURAL="/bin/ls"
fi
if [ "$OSTYPE" = "linux-gnu" ];
then
  export LS_COLORS="di=34:ln=35:so=32:ex=31:ow=34"
  alias ls="$LS_NATURAL --group-directories-first --color=tty"
else
  if type gls > /dev/null;
  then
    export LS_COLORS="di=34:ln=35:so=32:ex=31:ow=34"
    alias ls="gls --group-directories-first --color=tty"
  else
    export CLICOLOR=1
    export LSCOLORS=gxBxhxDxfxhxhxhxhxcxcx
    alias ls="$LS_NATURAL -G"
  fi
fi
alias la='ls -la | grep "^d" && ls -la | grep "^-" && ls -la | grep "^l"'
